// @file Global Styles

// Type Sizes
$base-type-size: 1em;

//
// Root Elements
//
html {
	background-color: $html-bg-color;
	font-size: $base-type-size;
	-webkit-font-smoothing: antialiased;
}

body {
	overflow-x: visible;
	position: relative;
	z-index: map-get($zindex, body);
}

html,
body {
	height: 100%; // set to the height of the viewport
}

//
// Media Elements
//
img,
video,
object {
	display: block;
	height: auto;
	max-width: 100%;
}

//
// Selection colors
//
::selection {
	background: palette(brand);
	color: palette(mono, white);
}
::-moz-selection {
	background: palette(brand);
	color: palette(mono, white);
}

//
// Reset lists when used as navigational elements
//
nav ul,  
ul.menu, 
ol.menu {
    @include list-reset();
    
    // More often than not, we want anchors in menus to display block
    a { display: block; }
}

//
// Show nested back up text or an unicode element when fontface is not supported
//
.fa {
	vertical-align: middle;

	& > span {
		display: none;
		visibility: hidden;
		
		.no-fontface & {
			display: inline;
			visibility: visible;
		}
	}
}


//
// Keep all the JS triggers together in case we need to chain more than one
//
@include media($small-up) {

	// The adhesive nav bar is enabled
	@include javascript-tag('adhesive-navbar');
}


//
// Javascript enabled elements. Apply the bare minimum styles to these elements. 
//
.js {

	// Slide toggle effect
	.js-accordion-wrap { display: none; }
}

#body-overlay {
	display: none;
	background: rgba(#000, .5);
	opacity: 0;
	visibility: hidden;
	@include transition( opacity 250ms ease, visibility 250ms ease );

	&:hover { cursor: pointer; }

	body.js-overlay-active & {
		display: block;
		opacity: 1;
		position: absolute;
			top: 0; left: 0; right: 0; bottom: 0;
		visibility: visible;
		z-index: map-get($zindex, overlay);
		-webkit-backdrop-filter: blur(8px);
	}
}


// Development only
#size {
	background-color: palette(brand);
	color: palette(mono, white);
	line-height: 1;
	padding: .25em;
	position: fixed;
		bottom: 10%; right: 0;
	z-index: map-get($zindex, size-tag);
}